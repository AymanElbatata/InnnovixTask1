@model InnnovixHRG1.Models.userinput

@{
    ViewBag.Title = "UserPage";
    <link href="~/Content/Jtable/OtherFiles/themes/base/jquery-ui.min.css" rel="stylesheet" />
}

<h2>UserPage</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>userinput</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryIDD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryIDD", null, "_", new { @required = "required" })
                @Html.ValidationMessageFor(model => model.CountryIDD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.adults, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adults, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "adultnum" } })
                @Html.ValidationMessageFor(model => model.adults, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.children, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.children, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "childnum" } })
                @Html.ValidationMessageFor(model => model.children, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomTypeIDD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoomTypeIDD", null, "_", new { @required = "required", @id = "RoomTypeIDD" })
                @Html.ValidationMessageFor(model => model.RoomTypeIDD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MealTypeIDD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MealTypeIDD", null, "_", new { @required = "required", @id = "MealTypeIDD" })
                @Html.ValidationMessageFor(model => model.MealTypeIDD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.checkINdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.checkINdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "checkINdate" } })
                @Html.ValidationMessageFor(model => model.checkINdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.checkOUTdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.checkOUTdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "checkOUTdate" } })
                @Html.ValidationMessageFor(model => model.checkOUTdate, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group text-center">
            <div class="col-md-offset-2 col-md-12 p-3">
                <input type="button" value="Get Price" id="gettingpriceJSN" class="btn btn-outline-warning" />
                <input type="text" disabled id="resultCalc"/>
            </div>
            <div class="col-md-offset-2 col-md-12 p-3">
                <input type="submit" value="Reserve Now" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#adultnum, #childnum").keydown(function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#adultnum, #childnum").prop('maxlength', '1');



        $("#adultnum").keyup(function () {
            let x = parseInt($("#adultnum").val());
            if (x > 2) {
                document.getElementById("adultnum").value = "2";
            }
        });

        $("#childnum").keyup(function () {
            let x = parseInt($("#childnum").val());
            if (x > 2) {
                document.getElementById("childnum").value = "2";
            }
        });


        $("#checkINdate, #checkOUTdate").removeClass('hasDatepicker');
        $("#checkINdate").datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            minDate: "0",

            onSelect: function (selected) {
                $("#checkOUTdate").datepicker("option", "minDate", selected)
            }
        });
        $("#checkOUTdate").datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,

            onSelect: function (selected) {
                $("#checkINdate").datepicker("option", "maxDate", selected)
            }
        });



        $("#gettingpriceJSN").on("click", function (e) {
            e.preventDefault();
            if ($("#checkINdate").val() === "" || $("#checkOUTdate").val() === ""
                || $("#adultnum").val() === "" || $("#childnum").val() === ""
                || $("#RoomTypeIDD").val() === "" || $("#MealTypeIDD").val() === "") {
                alert("Please Add reservation data");
            }
         let url = '@Url.Action("GetResultConCurrent", "Home", new { Area=""}, null)';
            $.post(url, { checkINdate: $("#checkINdate").val(), checkOUTdate: $("#checkOUTdate").val(), adults: $("#adultnum").val(), children: $("#childnum").val(), RoomTypeIDD: $("#RoomTypeIDD").val(), MealTypeIDD: $("#MealTypeIDD").val() }, function (data, statuscode, xhr) {
                $("#resultCalc").val(data);

         });
      });



    });
</script>